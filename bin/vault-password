#!/usr/bin/expect

#Usage:
# vault-password [secret] [vaultId] [vaultPassword]

#Example:
#└─ $: vault-password my-secret vaultID vaultPassword
#
#spawn ansible-vault encrypt_string My_Little_Variable --vault-id vaulID@prompt --name My_Beautiful_Named_Variable
#New vault password (vaulID):
#Confirm new vault password (vaulID):
#My_Beautiful_Named_Variable: !vault |
#          $ANSIBLE_VAULT;1.2;AES256;vaultID
#          34633362626364383131363765623464613731366439343331303835616563383533373065623639
#          3839663531626265346439353166663638393935613362360a323638653034346263663533616635
#          37623663636531633764306436383161303164353033333464313066636330333534646161303236
#          3034656662386539610a333762353631636430343533306334323339313034646365646661386631
#          66303937396534373031613161353061356238356435363966336666646235396230
#Encryption successful

log_user 0
set var_value [lindex $argv 0]
set vault_id [lindex $argv 1]
set vault_pw [lindex $argv 2]

#spawn ansible-vault encrypt_string $var_value --vault-id $vault_id@prompt --name $var_name
spawn ansible-vault encrypt_string $var_value --vault-id $vault_id@prompt
expect "New vault password ($vault_id): "
send "$vault_pw \r"
#prepare for ansible typo:
#expect "Confirm vew vault password ($vault_id): "
expect "Confirm new vault password ($vault_id): "
send "$vault_pw \r"
interact
log_user 1
