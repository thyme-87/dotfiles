--recurse=yes
--tag-relative=yes
--exclude=.git

--fields=+aimS
--PHP-kinds=+cf
--languages=php,javascript,ruby
--langmap=php:.inc.php
--file-scope=no
-R

--langdef=markdown
--langmap=markdown:.md
--regex-markdown=/^#[ \t]+(.*)/\1/h,Heading_L1/
--regex-markdown=/^##[ \t]+(.*)/\1/i,Heading_L2/
--regex-markdown=/^###[ \t]+(.*)/\1/k,Heading_L3/

--langdef=latex
--langmap=latex:.tex
--regex-latex=/^\s*\\label\{([^}]*)\}/\1/l,label/
--regex-latex=/^\s*\\section\{([^}]*)\}/\1/s,section/
--regex-latex=/^\s*\\subsection\{([^}]*)\}/\1/t,subsection/
--regex-latex=/^\s*\\subsubsection\{([^}]*)\}/\1/u,subsubsection/
--regex-latex=/^\s*\\section\*\{([^}]*)\}/\1/s,section/
--regex-latex=/^\s*\\subsection\*\{([^}]*)\}/\1/t,subsection/
--regex-latex=/^\s*\\subsubsection\*\{([^}]*)\}/\1/u,subsubsection/

--langdef=ansible
--langmap=ansible:.yml
--langmap=ansible:+.yaml
--regex-ansible=/\s*roles\:/role-section/r,roles/
--regex-ansible=/\s*- name: "?(.[^"]+)/\1/t,task/
--regex-ansible=/\s*- role: (.*)/\1/r, roles/e
--languages=+ansible

--langdef=cloudformation
--langmap=cloudformation:.yml
--langmap=cloudformation:+.yaml
--regex-cloudformation=/^(^[[:alnum:]]+)/\1/s,section/
--regex-cloudformation=/^[[:blank:]]{2}([[:alnum:]][^:]*)/\1/r,resource/
--regex-cloudformation=/^[[:blank:]]{4}Type:(.*)/\1/t,type/
--languages=+cloudformation

--langdef=yaml
--langmap=yaml:.yml
--langmap=yaml:+.yaml
--regex-yaml=/^[[:blank:]]{2}([[:alnum:]][^:]*)/\1/t,toplevel/e
--regex-yaml=/^[[:blank:]]{4}([[:alnum:]][^:]*)/\1/s,secondlevel/e
--languages=+yaml

--langdef=groovy
--langmap=groovy:.groovy
--regex-groovy=/^[ \t]*package[ \t]+([a-zA-Z0-9.-_]+)/\1/p,package/
--regex-groovy=/^[ \t]*(private|public)?[ \t]*(abstract|final|static)?[ \t]*class[ \t]+([A-Za-z0-9_]+)/\3/c,class/
--regex-groovy=/^[ \t]*(private|public)?[ \t]*interface[ \t]+([A-Za-z0-9_]+)/\2/i,interface/
--regex-groovy=/^[ \t]*(private|public)?[ \t]*trait[ \t]+([A-Za-z0-9_]+)/\2/t,trait/
--regex-groovy=/^[ \t]*(private|public)?[ \t]*enum[ \t]+([A-Za-z0-9_]+)/\2/e,enum/
--regex-groovy=/^[ \t]*[(abstract|final|static) \t]*((def|void|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+)?([a-zA-Z0-9_]+\(.*\))[ \t]+/~\3/m,package method/
--regex-groovy=/^[ \t]*public[ \t]+[(abstract|final|static) \t]*((def|void|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+)?([a-zA-Z0-9_]+\(.*\))[ \t]+/+\3/m,public method/
--regex-groovy=/^[ \t]*protected[ \t]+[(abstract|final|static) \t]*((def|void|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+)?([a-zA-Z0-9_]+\(.*\))[ \t]+/#\3/m,protected method/
--regex-groovy=/^[ \t]*private[ \t]+[(abstract|final|static) \t]*((def|void|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+)?([a-zA-Z0-9_]+\(.*\))[ \t]+/-\3/m,private method/
--regex-groovy=/^[ \t]*[(final|static|synchronized) \t]*(def|byte|int|short|long|float|double|boolean|char|[A-Z][A-Za-z0-9_]*)[ \t]+([a-zA-Z0-9_]+)([ \t]*[\/]+.*)?/~\2/f,property/
--regex-groovy=/^[ \t]*public[ \t]+[(final|static|synchronized) \t]*(def|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+([a-zA-Z0-9_]+)([ \t]*[\/]+.*)?/+\2/f,public field/
--regex-groovy=/^[ \t]*protected[ \t]+[(final|static|synchronized) \t]*(def|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+([a-zA-Z0-9_]+)([ \t]*[\/]+.*)?/#\2/f,protected field/
--regex-groovy=/^[ \t]*private[ \t]+[(final|static|synchronized) \t]*(def|byte|int|short|long|float|double|boolean|char|[A-Z][a-zA-Z0-9_]*)[ \t]+([a-zA-Z0-9_]+)([ \t]*[\/]+.*)?/-\2/f,private field/
