---
#basic setup on new machines
- name: Setup everything
  hosts: target
  #remote_user: timon
  connection: local
  become: true #FIXME might not even be necessary?

  tasks:
    - name: Install base packages
      community.general.pacman:
        name: "{{ base_packages }}"
        state: latest
        update_cache: yes
      tags:
        - base
        - initial

    - name: Install extended base packages
      community.general.pacman:
        name: "{{ extended_base_packages }}"
        state: latest
        update_cache: yes
      tags:
        - base
        - initial

    - name: "Create usergroup for user {{ user_name }}"
      ansible.builtin.group:
        name: "{{ user.group }}"
        state: present
        system: no
      tags:
        - base
        - initial

#FIXME ensure that password is set on first run ONLY
    - name: "Create user {{ user_name }}"
      ansible.builtin.user:
        name: "{{ user.name }}"
        group: "{{ user.group }}"
        groups: "{{ user.additional_groups }}"
        state: present
        #password: "{{ user_password | password_hash('sha512', 'satlystuff') }}" #FIXME
        system: no
        append: yes
      tags:
        - base
        - initial

    - name: "Install some gnome packages"
      community.general.pacman:
        name: "{{ extended_base_packages }}"
        state: latest
        update_cache: yes
      tags:
        - gnome

    - name: "Create user for installing AUR packages"
      ansible.builtin.user:
        name: "{{ aur_user_name }}"
        state: present
        #password: "{{ test | password_hash('sha512', 'satlystuff') }}" #FIXME
        system: yes
      tags:
        - yay

    - name: "Allow user {{ aur_user_name }} passwordless access to pacman"
      lineinfile:
        group: root
        owner: root
        mode: 0644
        path: "/etc/sudoers.d/{{ aur_user_name }}"
        create: yes
        state: present
        line: "{{ aur_user_name }} ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        validate: "/usr/sbin/visudo -cf %s"
      tags:
        - yay

    - name: "Determin if yay is already installed (check for /usr/bin/yay)"
      stat:
        path: /usr/bin/yay
      register: yay_present
      tags:
        - yay

    - name: "Fetch package yay from AUR"
      become: true
      become_user: "{{ aur_user_name }}"
      ansible.builtin.git:
        clone: yes
        repo: https://aur.archlinux.org/yay.git
        dest: /tmp/yay
          #version: "{{ yay_version }}"
      when: not yay_present.stat.exists
      tags:
        - yay

    - name: "Install yay via makepkg -si"
      become: true
      become_user: "{{ aur_user_name }}"
      ansible.builtin.shell: |
        cd /tmp/yay/
        makepkg -si --noconfirm
      when: not yay_present.stat.exists
      tags:
        - yay

    - name: "Download backgrounds"
      ansible.builtin.get_url:
        url: "{{ dropbox_background_folder_url }}"
        dest: "/home/{{ user.name }}/Downloads/backgrounds.zip"

#TODO test if this is possible in one step
    - name: "Unzip backgrounds.zip to /home/{{ user.name }}/backgrounds/"
      ansible.builtin.unarchive:
        src: "/home/{{ user.name }}/Downloads/backgrounds.zip"
        dest: "/home/{{ user.name }}/backgrounds/"



#TODO
# install pre-X minimal setup
# install gnome + xmonad + picom + xmobar
# [x] install and configure yay
# install aur packages via yay
# setup gdm config
# setup dotfiles
